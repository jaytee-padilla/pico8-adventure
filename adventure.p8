pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--a table containing all game entities
entities = {}

--creates and returns a new position component
function newposition(x, y, w, h)
	local p = {}

	p.x = x
	p.y = y
	p.w = w
	p.h = h

	return p
end

--takes the x, y coordinates of the sprite's position within the sprite sheet
--each sprite is 8x8, so grabbing 2nd sprite on sprite sheet would be 8, 0
function newsprite(x, y)
	local s = {}

	s.x = x
	s.y = y

	return s
end

--creates and returns a new control component
function newcontrol(left, right, up, down, input)
	local c = {}

	c.left = left
	c.right = right
	c.up = up
	c.down = down
	c.input = input

	return c
end

--creates and returns a new intention component
function newintention()
	i = {}

	i.left = false
	i.right = false
	i.up = false
	i.down = false

	return i
end

--creates and returns a new entity component
function newentity(position, sprite, control, intention)
	local e = {}

	e.position = position
	e.sprite = sprite
	e.control = control
	e.intention = intention

	--adds each entity instance to entities table
	add(entities, e)

	return e
end

--player input is based on the current button being pressed
--anytime a button is being pressed, updates ent's intention property to true and then false when button is released
function playerinput(ent)
	ent.intention.left = btn(ent.control.left)
	ent.intention.right = btn(ent.control.right)
	ent.intention.up = btn(ent.control.up)
	ent.intention.down = btn(ent.control.down)
end

controlsystem = {}
controlsystem.update = function()
	for ent in all(entities) do
		--every frame, the control system is checking the entities table for entities that have non-nil control/intention properties
		--updates the entity's control.input property with the current entity being controlled
		if ent.control ~= nil and ent.intention ~= nil then
			ent.control.input(ent)
		end
	end
end

physicssystem = {}
physicssystem.update = function ()
	for ent in all(entities) do
		--every frame, the physics system is checking the entities table for entities that have non-nil intention properties and updating the entity's position based on the (movement) intention direction
		if ent.position ~= nil and ent.intention ~= nil then
			if ent.intention.left then ent.position.x -= 1 end
			if ent.intention.right then ent.position.x += 1 end
			if ent.intention.up then ent.position.y -= 1 end
			if ent.intention.down then ent.position.y += 1 end
		end
	end
end

graphicsystem = {}
graphicsystem.update = function()
	cls()
	--every frame, center camera on player sprite
	camera(
		-64 + player.position.x + (player.position.w / 2),
		-64 + player.position.y + (player.position.h / 2)
	)
	--every frame, draw the map
	map()

	--every frame, draw all sprite entities at their specified position coordinates
	for ent in all(entities) do
		if ent.sprite ~= nil and ent.position ~= nil then
			sspr(
				player.sprite.x, player.sprite.y,
				player.position.w, player.position.h,
				player.position.x, player.position.y
			)
		end
	end

	--(for testing purposes) crosshair sprite
	--spr(16, 64-4, 64-4)
end

--(for testing purposes) converts anything to string, even nested tables
function tostring(any)
	if (type(any)~="table") return tostr(any)
	
	local str = "{"

	for k,v in pairs(any) do
		if (str~="{") str=str..","
		str="\n"..str..tostring(k).."="..tostring(v)
	end

  return str.."}"
end

function _init()
	--creates a player entity
	player = newentity(
		--creates a position component and adds sprite to the coordinates on the map
		newposition(56, 56, 8, 8),
		--create a sprite component
		newsprite(8, 0),
		--creates a control component
		newcontrol(0, 1, 2, 3, playerinput),
		--creates a intention component
		newintention()
	)
end

function _update60()
	--checks player input
	controlsystem.update()
	--moves entities
	physicssystem.update()
end

function _draw()
	--every frame, draws all graphics to the screen
	graphicsystem.update()
end
__gfx__
00000000007000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc3333333355555555
00000000007777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc3333333355555555
000000000071ff100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc3333333355555555
00000000bb7ffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc3333333355555555
00000000bcbcccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc3333333355555555
00000000fbccccc40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc3333333355555555
00000000001111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc3333333355555555
0000000000f000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc3333333355555555
00088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88000088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88000088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0e0e0e0e0e0e0e0e0e0e0e0e0e0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0e0e0e0e0e0e0e0d0d0d0d0e0e0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0e0e0e0e0e0e0e0e0d0d0d0e0e0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0e0e0e0e0e0e0e0e0e0d0d0e0e0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0e0e0e0e0e0e0e0e0e0e0d0e0e0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0e0e0e0e0e0e0e0e0e0e0d0e0e0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0e0e0e0e0e0e0e0e0e0e0e0e0e0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0001000000000000000e0500e0500f0500f050110501405015050190501a0501d05021050240501e0501e05018050160501505014050140501305013050130501205017050170501505012050000000000000000
00100000000000000000000127001700016000130001a7001a7001a7000b0000e0001100011000110001200012000110001100015000190001b0001c0001b000140001100010000100000f000100000000000000
0010000022f0029f0012f0010f000ef000ef000df000df000cf000cf000cf000cf000cf000cf000df000df000ef000ff0010f0011f0012f0013f0015f0016f0018f001af001bf001df001ff0020f000000000000
